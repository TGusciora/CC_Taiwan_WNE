table(cc_data$PAY_6)
glimpse(cc_data)
summary(cc_data)
# STATYSTYKI OPISOWE DANYCH
#SEX
ggplot(data = data.frame(table(cc_data$SEX, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Płeć w próbie") +
xlab("Płeć") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$SEX ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na płeć") +
xlab("Płeć") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#MARRIAGE
ggplot(data = data.frame(table(cc_data$MARRIAGE, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Stan cywilny w próbie") +
xlab("Stan cywilny") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$MARRIAGE ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na stan cywilny") +
xlab("Stan cywilny") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#EDUCATION
ggplot(data = data.frame(table(cc_data$EDUCATION, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Wyksztalcenie w probie") +
xlab("Stan cywilny") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$EDUCATION ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na wykształcenie") +
xlab("Wykształcenie") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#KORELOGRAM - zmienne PAY i BIL_AMT skorelowane
cc_ilosciowe <-
map_lgl(cc_data, is.numeric) %>%
which() %>% names()
cc_korelacje <- cor(cc_data[,cc_ilosciowe],
use = "pairwise.complete.obs")
cc_ilosciowe_sort <-
sort(cc_ilosciowe[,"default.payment.next.month"],
decreasing = TRUE) %>% names()
corrplot.mixed(cc_korelacje,
upper = "square",
lower = "number",
tl.col="black", # kolor etykietek (nazw zmiennych)
tl.pos = "lt")  # pozycja etykietek (lt = left and top)
#Zależności między zmiennymi
sum_sex_edu <- cc_data %>%
group_by(SEX, EDUCATION, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
sum_sex_marr <- cc_data %>%
group_by(SEX, MARRIAGE, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
sum_marr_edu <- cc_data %>%
group_by(MARRIAGE, EDUCATION, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
# PRACA DYPLOMOWA - MODELE PROGNOZUJACE WYNIK WALKI MMA W FEDERACJI UFC #
# I DATA PREPARATION
# II EXPLORATORY DATA ANALYSIS
# Two approaches
# 1 - betting before the fight - we don't know current fight statistics
# 2 - betting at the end of fight - we know all current fight statistics
#Install packages ----
#install.packages("fBasics")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages('ggplot2')
#install.packages('tidyverse')
#install.packages('corrplot')
#install.packages('caret')
#install.packages('shiny')
#install.packages("randomForest")
#install.packages("ranger")
#install.packages("gbm")
#install.packages("xgboost")
#install.packages("fastAdaboost")
#install.packages("adaStump")
#install.packages("caret")
#install.packages("tibble")
#install.packages("here")
#Library ----
library(dplyr)
library(fBasics)
library(sqldf)
library(tidyverse)
library(reshape2)
library(readr)
library(ggplot2)
library(tidyverse)
library(corrplot)
library(caret)
library(randomForest)
library(ranger)
library(gbm)
library(xgboost)
library(fastAdaboost)
library(adaStump)
library(caret)
library(tibble)
library(here)
#Notes ----
#basicStats(wzrost) #DESCRIPTIVE STATISTICS OF EACH VARIABLE
#Prepare ----
rm(list = ls()) #usuniecie wszystkich elementow z pamieci podrecznej
setwd("C:/Users/tgusc/Documents/GitHub/CC_Taiwan_WNE/") #work directory na lapku
#setwd("C:/Users/User/Documents/GitHub/CC_Taiwan_WNE")#work directory na tablecie
#Import raw data ----
cc_data <- read.csv("data/UCI_Credit_Card.csv")
#check_vars
table(cc_data$SEX)
table(cc_data$EDUCATION)
table(cc_data$MARRIAGE)
sapply(cc_data,
function(x) sum(x == ""))
# No missing values in whole dataset
# 25 variables - all numeric
# id - id of obs
# sex, education, marriage - numerical cactegorical variables
glimpse(cc_data)
basicStats(cc_data)
summary(cc_data)
table(cc_data$default.payment.next.month)
#CZYSZCZENIE DANYCH
table(cc_data$SEX)
table(cc_data$EDUCATION)
table(cc_data$MARRIAGE)
#As seen previously, some categories are mislabeled or undocumented. Before proceeding, it is time to fix it.
#The 0 in MARRIAGE can be safely categorized as 'Other' (thus 3).
#The 0 (undocumented), 5 and 6 (label unknown) in EDUCATION can also be put in a 'Other' cathegory (thus 4)
#cc_data <- data.frame(cc_data)
#PROBLEM - jak zamienic wartosc 0 na 3? 2021-09-08
cc_data$MARRIAGE[cc_data$MARRIAGE==0] <- 3 #zmiana wartosci 0 na wartosc 3 - inne
cc_data$EDUCATION[cc_data$EDUCATION==0] <- 4 #zmiana wartosci 0 na wartosc 3 - inne
cc_data$EDUCATION[cc_data$EDUCATION==5] <- 4 #zmiana wartosci 5 na wartosc 3 - inne
cc_data$EDUCATION[cc_data$EDUCATION==6] <- 4 #zmiana wartosci 6 na wartosc 3 - inne
table(cc_data$EDUCATION)
table(cc_data$MARRIAGE)
#zamiana zmiennej celu i zmiennych kategorycznych na factory
#Wykomentowanie na rzecz logitu i korelogramu - cc_data=cc_data %>% mutate(default.payment.next.month=as.factor(default.payment.next.month))
cc_data=cc_data %>% mutate(SEX=as.factor(SEX))
cc_data=cc_data %>% mutate(EDUCATION=as.factor(EDUCATION))
cc_data=cc_data %>% mutate(MARRIAGE=as.factor(MARRIAGE))
levels(cc_data$SEX) <- c("Mężczyzna", "Kobieta")
levels(cc_data$EDUCATION) <- c("Magister lub wyższe","Licencjat lub równoważne","Szkola średnia","Inne")
levels(cc_data$MARRIAGE) <- c("Zamężna/żonaty","Kawaler/panna","Inne")
table(cc_data$SEX)
table(cc_data$EDUCATION)
table(cc_data$MARRIAGE)
#Zamiana wartości PAY_X mniejszych od 0 na 0 - spłata zadłużenia
table(cc_data$PAY_0)
table(cc_data$PAY_2)
table(cc_data$PAY_3)
table(cc_data$PAY_4)
table(cc_data$PAY_5)
table(cc_data$PAY_6)
cc_data$PAY_0[cc_data$PAY_0==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_0[cc_data$PAY_0==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_2[cc_data$PAY_2==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_2[cc_data$PAY_2==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_3[cc_data$PAY_3==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_3[cc_data$PAY_3==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_4[cc_data$PAY_4==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_4[cc_data$PAY_4==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_5[cc_data$PAY_5==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_5[cc_data$PAY_5==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_6[cc_data$PAY_6==-1] <- 0 #zmiana wartosci -1 na wartosc 0 - terminowa spłata zadłużenia
cc_data$PAY_6[cc_data$PAY_6==-2] <- 0 #zmiana wartosci -2 na wartosc 0 - terminowa spłata zadłużenia
cc_data=cc_data %>% mutate(PAY_0=as.factor(PAY_0))
cc_data=cc_data %>% mutate(PAY_2=as.factor(PAY_2))
cc_data=cc_data %>% mutate(PAY_3=as.factor(PAY_3))
cc_data=cc_data %>% mutate(PAY_4=as.factor(PAY_4))
cc_data=cc_data %>% mutate(PAY_5=as.factor(PAY_5))
cc_data=cc_data %>% mutate(PAY_6=as.factor(PAY_6))
table(cc_data$PAY_0)
table(cc_data$PAY_2)
table(cc_data$PAY_3)
table(cc_data$PAY_4)
table(cc_data$PAY_5)
table(cc_data$PAY_6)
levels(cc_data$PAY_0) <- c("P0","P1","P2","P3","P4","P5","P6","P7","P8")
levels(cc_data$PAY_2) <- c("P0","P1","P2","P3","P4","P5","P6","P7","P8")
levels(cc_data$PAY_3) <- c("P0","P1","P2","P3","P4","P5","P6","P7","P8")
levels(cc_data$PAY_4) <- c("P0","P1","P2","P3","P4","P5","P6","P7","P8")
levels(cc_data$PAY_5) <- c("P0","P2","P3","P4","P5","P6","P7","P8")
levels(cc_data$PAY_6) <- c("P0","P2","P3","P4","P5","P6","P7","P8")
table(cc_data$PAY_0)
table(cc_data$PAY_2)
table(cc_data$PAY_3)
table(cc_data$PAY_4)
table(cc_data$PAY_5)
table(cc_data$PAY_6)
### Statystyki oczyszczonego zbioru danych
glimpse(cc_data)
summary(cc_data)
# STATYSTYKI OPISOWE DANYCH
#SEX
ggplot(data = data.frame(table(cc_data$SEX, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Płeć w próbie") +
xlab("Płeć") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$SEX ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na płeć") +
xlab("Płeć") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#MARRIAGE
ggplot(data = data.frame(table(cc_data$MARRIAGE, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Stan cywilny w próbie") +
xlab("Stan cywilny") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$MARRIAGE ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na stan cywilny") +
xlab("Stan cywilny") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#EDUCATION
ggplot(data = data.frame(table(cc_data$EDUCATION, cc_data$default.payment.next.month)), aes(x = Var1, y=Freq, fill = Var2)) +
geom_bar(na.rm = TRUE, position = "stack", width = 0.7, stat = "identity") +
ggtitle("Wyksztalcenie w probie") +
xlab("Stan cywilny") +
ylab("Liczebność") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_minimal() +
geom_text(aes(label = Freq), position = position_stack(),
vjust = -.5, color = "black", size = 3.5)
ggplot(as.data.frame(as.data.frame(round(prop.table(table(cc_data$default.payment.next.month, cc_data$EDUCATION ),2)*100,2))),aes(x=factor(Var2),y=Freq,fill=Var1)) +
geom_bar(stat="identity",position="stack")+
geom_text(aes(label=Freq),position="stack",vjust=1)+
scale_fill_manual(values=c("grey60","grey80"))+
ggtitle("Udział niespłaconych kredytów w podziale na wykształcenie") +
xlab("Wykształcenie") +
ylab("Proporcja") +
labs(fill = "Czy kredyt zostal splacony?\n0 - tak, 1 - nie") +
theme_bw()
#KORELOGRAM - zmienne PAY i BIL_AMT skorelowane
cc_ilosciowe <-
map_lgl(cc_data, is.numeric) %>%
which() %>% names()
cc_korelacje <- cor(cc_data[,cc_ilosciowe],
use = "pairwise.complete.obs")
cc_ilosciowe_sort <-
sort(cc_ilosciowe[,"default.payment.next.month"],
decreasing = TRUE) %>% names()
corrplot.mixed(cc_korelacje,
upper = "square",
lower = "number",
tl.col="black", # kolor etykietek (nazw zmiennych)
tl.pos = "lt")  # pozycja etykietek (lt = left and top)
#Zależności między zmiennymi
sum_sex_edu <- cc_data %>%
group_by(SEX, EDUCATION, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
sum_sex_marr <- cc_data %>%
group_by(SEX, MARRIAGE, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
sum_marr_edu <- cc_data %>%
group_by(MARRIAGE, EDUCATION, default.payment.next.month) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
set.seed(1235)
#zmiana zmiennej celu na factor
data_part <- createDataPartition(cc_data$default.payment.next.month,
p = 0.7,
list = FALSE)
cc_data_train <- cc_data[data_part,]
cc_data_test <- cc_data[-data_part,]
#i zbiorki, gdzie zmienna celu jest factorem
cc_data_train_fct <- cc_data_train
Cc_data_test_fct <- cc_data_test
cc_data_train_fct=cc_data_train_fct %>% mutate(default.payment.next.month=as.factor(default.payment.next.month))
Cc_data_test_fct=Cc_data_test_fct %>% mutate(default.payment.next.month=as.factor(default.payment.next.month))
cc_data_train_fct  <- cc_data_train_fct %>% as.data.frame()
Cc_data_test_fct <- Cc_data_test_fct %>% as.data.frame()
# Liczebności utworzonych zbiorów
nrow(cc_data_train)/nrow(cc_data)
nrow(cc_data_test)/nrow(cc_data)
prop.table(table(cc_data_train$default.payment.next.month))
prop.table(table(cc_data_test$default.payment.next.month))
### Wlasnosci prognostyczne? Feature engineering w R?
### Sprawdzenie danych pod regresje i pod inne modele
zmienne_wszystkie <- c("LIMIT_BAL","AGE","BILL_AMT1","BILL_AMT2","BILL_AMT3","BILL_AMT4","BILL_AMT5","BILL_AMT6","PAY_AMT1","PAY_AMT2","PAY_AMT3","PAY_AMT4","PAY_AMT5","PAY_AMT6",
"SEX","EDUCATION","MARRIAGE","PAY_0","PAY_2","PAY_3","PAY_4","PAY_5","PAY_6")
zmienne_ilosciowe <- c("LIMIT_BAL","AGE","BILL_AMT1","BILL_AMT2","BILL_AMT3","BILL_AMT4","BILL_AMT5","BILL_AMT6","PAY_AMT1","PAY_AMT2","PAY_AMT3","PAY_AMT4","PAY_AMT5","PAY_AMT6")
zmienne_jakosciowe <- c("SEX","EDUCATION","MARRIAGE","PAY_0","PAY_2","PAY_3","PAY_4","PAY_5","PAY_6")
#MODEL LOGISTYCZNY
names <- paste0("default.payment.next.month ~ ", paste0(zmienne_wszystkie, collapse = " + "))
cc_data_logit1 <- lm(as.formula(names),
data = cc_data_train)
summary(cc_data_logit1) # aR2 = 0.2065, model łącznie istotny (p-value F-statistic < 0.05)
# and now for something completely different
# random forest
#RANDOM FORESTS
model1.formula <- default.payment.next.month ~ LIMIT_BAL + AGE + SEX + EDUCATION + MARRIAGE +
BILL_AMT1 + BILL_AMT2 + BILL_AMT3 + BILL_AMT4 + BILL_AMT5 + BILL_AMT6 +
PAY_AMT1 + PAY_AMT2 + PAY_AMT3 + PAY_AMT4 + PAY_AMT5 + PAY_AMT6 +
PAY_0 + PAY_2 + PAY_3 + PAY_4 + PAY_5 + PAY_6
cc_data.rf <- randomForest(model1.formula,
data = cc_data_train_fct)
summary(cc_data.rf)
#GRADIENT BOOSTING
glimpse(cc_data_train)
cc_data.gbm <-
gbm(model1.formula,
data = cc_data_train,
distribution = "bernoulli",
# całkowita liczba drzew
n.trees = 500,
# liczba interakcji zmiennych - de facto głębokość drzewa
interaction.depth = 4,
# shrinkage parameter - szybkość uczenia
shrinkage = 0.01,
verbose = FALSE)
# Predykcje na train oraz test
cc_data.pred.train.gbm <- predict(cc_data.gbm,
cc_data_train,
# type = "response" daje
# w tym przypadku
# prawdopodobieństwo sukcesu
type = "response",
# parametr n.trees umożliwia
# wybranie iteracji, z której
# prognozę zwracamy
n.trees = 500)
cc_data.pred.test.gbm <- predict(cc_data.gbm,
Cc_data_test_fct,
# type = "response" daje
# w tym przypadku
# prawdopodobieństwo sukcesu
type = "response",
# parametr n.trees umożliwia
# wybranie iteracji, z której
# prognozę zwracamy
n.trees = 500)
#Model przewiduje jedynki - czyli wyższe p_1 oznacza większe prawdopodobieństwo bycia "1"
#tuning parametrow modelu
parametry_gbm <- expand.grid(interaction.depth = c(1, 2, 4),
n.trees = c(100, 500),
shrinkage = c(0.01, 0.1),
n.minobsinnode = c(100, 250, 500))
ctrl_cv3 <- trainControl(method = "cv",
number = 3,
classProbs = TRUE,
summaryFunction = twoClassSummary)
parametry_xgb <- expand.grid(nrounds = seq(20, 80, 10),
max_depth = c(4),
eta = c(0.25),
gamma = 1,
colsample_bytree = c(0.2),
min_child_weight = c(150),
subsample = 0.8)
#Poziomy zmiennych jakościowych należy przekształcić, aby nie zaczynały się od cyfry.
#Jest to wymagane przez method = "xgbTree" w funkcji train().
cc_data.xgb_m3 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb)
glimpse(cc_data_train_fct)
levels(cc_data_train_fct$default.payment.next.month) <- c("No","Yes")
table(cc_data_train_fct$default.payment.next.month)
cc_data.xgb_m3 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb)
View(cc_data.xgb_m3)
cc_data.xgb_m3
parametry_xgb2 <- expand.grid(nrounds = 80,
max_depth = seq(5, 15, 2),
eta = c(0.25),
gamma = 1,
colsample_bytree = c(0.2),
min_child_weight = seq(200, 1000, 200),
subsample = 0.8)
cc_data.xgb_m4 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb2)
cc_data.xgb_m4
parametry_xgb2 <- expand.grid(nrounds = 80,
max_depth = seq(1, 15, 2),
eta = c(0.25),
gamma = 1,
colsample_bytree = c(0.2),
min_child_weight = seq(50, 500, 50),
subsample = 0.8)
cc_data.xgb_m4 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb2)
cc_data.xgb_m4 #
max(cc_data.xgb_m)
max(cc_data.xgb_m4)
parametry_xgb3 <- expand.grid(nrounds = 80,
max_depth = 13,
eta = c(0.25),
gamma = 1,
colsample_bytree = seq(0.1, 0.8, 0.1),
min_child_weight = 200,
subsample = 0.8)
cc_data.xgb_m5 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb3)
cc_data.xgb_m5
parametry_xgb4 <- expand.grid(nrounds = 80,
max_depth = 13,
eta = c(0.25),
gamma = 1,
colsample_bytree = 0.7,
min_child_weight = 200,
subsample = c(0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9))
cc_data.xgb_m6 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb4)
cc_data.xgb_m6
parametry_xgb4 <- expand.grid(nrounds = 80,
max_depth = 13,
eta = c(0.25),
gamma = 1,
colsample_bytree = 0.7,
min_child_weight = 200,
subsample = c(0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95))
cc_data.xgb_m6 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb4)
cc_data.xgb_m6
parametry_xgb5 <- expand.grid(nrounds = 320,
max_depth = 13,
eta = 0.05,
gamma = 1,
colsample_bytree = 0.7,
min_child_weight = 200,
subsample = 0.95)
cc_data.xgb_m7 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb5)
cc_data.xgb_m7
parametry_xgb5 <- expand.grid(nrounds = 1000,
max_depth = 13,
eta = 0.01,
gamma = 1,
colsample_bytree = 0.7,
min_child_weight = 200,
subsample = 0.95)
cc_data.xgb_m7 <- train(model1.formula,
data = cc_data_train_fct,
method = "xgbTree",
trControl = ctrl_cv3,
tuneGrid  = parametry_xgb5)
cc_data.xgb_m7
